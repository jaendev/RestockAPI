// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestockAPI.Data.Context;

#nullable disable

namespace RestockAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250614214546_SeedProductsAndAlerts")]
    partial class SeedProductsAndAlerts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RestockAPI.Models.AlertStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasDefaultValue("#6b7280");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsFinalState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_AlertStatuses_Name");

                    b.ToTable("AlertStatus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#f59e0b",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La alerta está activa y requiere atención",
                            IsActive = true,
                            IsFinalState = false,
                            Name = "Activa"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#3b82f6",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La alerta ha sido vista y reconocida por el usuario",
                            IsActive = true,
                            IsFinalState = false,
                            Name = "Reconocida"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#22c55e",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La alerta ha sido resuelta y está cerrada",
                            IsActive = true,
                            IsFinalState = true,
                            Name = "Resuelta"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#6b7280",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La alerta ha sido descartada sin acción",
                            IsActive = true,
                            IsFinalState = true,
                            Name = "Descartada"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#8b5cf6",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "La alerta está siendo atendida actualmente",
                            IsActive = true,
                            IsFinalState = false,
                            Name = "En Proceso"
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.AlertType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasDefaultValue("#6b7280");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("Normal");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_AlertTypes_Name");

                    b.ToTable("AlertTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#f59e0b",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "El stock del producto está por debajo del mínimo establecido",
                            IsActive = true,
                            Name = "Stock Bajo",
                            Priority = "Medio"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#ef4444",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "El producto está completamente agotado",
                            IsActive = true,
                            Name = "Sin Stock",
                            Priority = "Alto"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#f97316",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "El producto está cerca de su fecha de vencimiento",
                            IsActive = true,
                            Name = "Próximo a Vencer",
                            Priority = "Bajo"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#8b5cf6",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "El producto tiene stock excesivamente alto",
                            IsActive = true,
                            Name = "Exceso de Stock",
                            Priority = "Bajo"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#06b6d4",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "El precio del producto ha sido modificado",
                            IsActive = true,
                            Name = "Precio Cambiado",
                            Priority = "Informativo"
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)")
                        .HasDefaultValue("#6366f1");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Categories_IsActive");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Categories_Name");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "#22c55e",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos alimenticios y comestibles",
                            IsActive = true,
                            Name = "Alimentos"
                        },
                        new
                        {
                            Id = 2,
                            Color = "#06b6d4",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Bebidas y refrescos",
                            IsActive = true,
                            Name = "Bebidas"
                        },
                        new
                        {
                            Id = 3,
                            Color = "#3b82f6",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos de limpieza para el hogar",
                            IsActive = true,
                            Name = "Limpieza"
                        },
                        new
                        {
                            Id = 4,
                            Color = "#f59e0b",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos de higiene y cuidado personal",
                            IsActive = true,
                            Name = "Higiene Personal"
                        },
                        new
                        {
                            Id = 5,
                            Color = "#ef4444",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Medicamentos y productos farmacéuticos",
                            IsActive = true,
                            Name = "Medicinas"
                        },
                        new
                        {
                            Id = 6,
                            Color = "#8b5cf6",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Artículos para el hogar y decoración",
                            IsActive = true,
                            Name = "Hogar"
                        },
                        new
                        {
                            Id = 7,
                            Color = "#10b981",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos para mascotas y animales",
                            IsActive = true,
                            Name = "Mascotas"
                        },
                        new
                        {
                            Id = 8,
                            Color = "#6b7280",
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos varios sin categoría específica",
                            IsActive = true,
                            Name = "Otros"
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.InventoryAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcknowledgedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("AlertStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<int>("AlertTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ResolvedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AlertStatusId")
                        .HasDatabaseName("IX_InventoryAlerts_AlertStatusId");

                    b.HasIndex("AlertTypeId")
                        .HasDatabaseName("IX_InventoryAlerts_AlertTypeId");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("IX_InventoryAlerts_CreatedAt");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("IX_InventoryAlerts_ProductId");

                    b.HasIndex("AlertStatusId", "AlertTypeId")
                        .HasDatabaseName("IX_InventoryAlerts_Status_Type");

                    b.ToTable("InventoryAlerts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Pan de Molde: Stock actual (2) por debajo del mínimo (5)",
                            ProductId = 3
                        },
                        new
                        {
                            Id = 2,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Azúcar Blanca: Stock actual (1) por debajo del mínimo (4)",
                            ProductId = 6
                        },
                        new
                        {
                            Id = 3,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 11, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 2,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 10, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Coca Cola: Stock actual (5) por debajo del mínimo (6)",
                            ProductId = 8
                        },
                        new
                        {
                            Id = 4,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Papel Higiénico: Stock actual (1) por debajo del mínimo (2)",
                            ProductId = 13
                        },
                        new
                        {
                            Id = 5,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Pasta Dental: Stock actual (2) por debajo del mínimo (4)",
                            ProductId = 18
                        },
                        new
                        {
                            Id = 6,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Alcohol 70%: Stock actual (3) por debajo del mínimo (5)",
                            ProductId = 23
                        },
                        new
                        {
                            Id = 7,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Pilas AA: Stock actual (2) por debajo del mínimo (6)",
                            ProductId = 28
                        },
                        new
                        {
                            Id = 8,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Arena para Gatos: Stock actual (1) por debajo del mínimo (4)",
                            ProductId = 32
                        },
                        new
                        {
                            Id = 9,
                            AlertStatusId = 1,
                            AlertTypeId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Paraguas: Stock actual (1) por debajo del mínimo (3)",
                            ProductId = 36
                        },
                        new
                        {
                            Id = 10,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Huevos Frescos: Producto completamente agotado",
                            ProductId = 4
                        },
                        new
                        {
                            Id = 11,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Cerveza Artesanal: Producto completamente agotado",
                            ProductId = 10
                        },
                        new
                        {
                            Id = 12,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Lejía: Producto completamente agotado",
                            ProductId = 15
                        },
                        new
                        {
                            Id = 13,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 10, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 2,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 9, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Desodorante: Producto completamente agotado",
                            ProductId = 20
                        },
                        new
                        {
                            Id = 14,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Ibuprofeno 400mg: Producto completamente agotado",
                            ProductId = 25
                        },
                        new
                        {
                            Id = 15,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Papel Aluminio: Producto completamente agotado",
                            ProductId = 30
                        },
                        new
                        {
                            Id = 16,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Shampoo para Mascotas: Producto completamente agotado",
                            ProductId = 34
                        },
                        new
                        {
                            Id = 17,
                            AlertStatusId = 1,
                            AlertTypeId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Mascarillas: Producto completamente agotado",
                            ProductId = 38
                        },
                        new
                        {
                            Id = 18,
                            AcknowledgedAt = new DateTime(2025, 6, 13, 12, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 3,
                            AlertTypeId = 3,
                            CreatedAt = new DateTime(2025, 6, 12, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Leche Entera: Próxima a vencer en 3 días",
                            ProductId = 5,
                            ResolvedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            AlertStatusId = 1,
                            AlertTypeId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Jugo de Naranja: Próximo a vencer en 2 días",
                            ProductId = 9
                        },
                        new
                        {
                            Id = 20,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 9, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 2,
                            AlertTypeId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 8, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Paracetamol 500mg: Próximo a vencer en 30 días",
                            ProductId = 22
                        },
                        new
                        {
                            Id = 21,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 4,
                            AlertTypeId = 4,
                            CreatedAt = new DateTime(2025, 6, 13, 12, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Agua Mineral: Stock excesivo detectado (30 unidades)",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 22,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 7, 0, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 3,
                            AlertTypeId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 6, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Café Molido: Precio actualizado de €6.80 a €7.50",
                            ProductId = 11,
                            ResolvedAt = new DateTime(2025, 6, 14, 8, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            AcknowledgedAt = new DateTime(2025, 6, 14, 11, 30, 0, 0, DateTimeKind.Utc),
                            AlertStatusId = 2,
                            AlertTypeId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 11, 0, 0, 0, DateTimeKind.Utc),
                            Message = "Bombillas LED: Precio actualizado de €3.90 a €4.50",
                            ProductId = 27
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<decimal>("CurrentStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<decimal>("MinimumStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UnitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("IX_Products_CategoryId");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Products_IsActive");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Products_Name");

                    b.HasIndex("UnitId")
                        .HasDatabaseName("IX_Products_UnitId");

                    b.HasIndex("IsActive", "CategoryId")
                        .HasDatabaseName("IX_Products_IsActive_CategoryId");

                    b.ToTable("Products", t =>
                        {
                            t.HasCheckConstraint("CK_Product_CurrentStock_NonNegative", "\"CurrentStock\" >= 0");

                            t.HasCheckConstraint("CK_Product_MinimumStock_NonNegative", "\"MinimumStock\" >= 0");

                            t.HasCheckConstraint("CK_Product_Price_NonNegative", "\"Price\" IS NULL OR \"Price\" >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 25m,
                            Description = "Arroz blanco de grano largo 1kg",
                            IsActive = true,
                            MinimumStock = 10m,
                            Name = "Arroz Blanco",
                            Price = 3.50m,
                            UnitId = 2,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Aceite de oliva virgen extra 500ml",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Aceite de Oliva",
                            Price = 8.90m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 2m,
                            Description = "Pan de molde integral 500g",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Pan de Molde",
                            Price = 1.80m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Huevos frescos de granja",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Huevos Frescos",
                            Price = 4.20m,
                            UnitId = 10,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 15m,
                            Description = "Leche entera pasteurizada 1L",
                            IsActive = true,
                            MinimumStock = 8m,
                            Name = "Leche Entera",
                            Price = 2.50m,
                            UnitId = 4,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 1m,
                            Description = "Azúcar refinada 1kg",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Azúcar Blanca",
                            Price = 2.20m,
                            UnitId = 2,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 30m,
                            Description = "Agua mineral natural 1.5L",
                            IsActive = true,
                            MinimumStock = 12m,
                            Name = "Agua Mineral",
                            Price = 1.20m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 5m,
                            Description = "Refresco de cola 2L",
                            IsActive = true,
                            MinimumStock = 6m,
                            Name = "Coca Cola",
                            Price = 3.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Jugo natural de naranja 1L",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Jugo de Naranja",
                            Price = 2.80m,
                            UnitId = 7,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Cerveza artesanal 330ml",
                            IsActive = true,
                            MinimumStock = 6m,
                            Name = "Cerveza Artesanal",
                            Price = 2.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 12m,
                            Description = "Café molido natural 500g",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Café Molido",
                            Price = 7.50m,
                            UnitId = 6,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 6m,
                            Description = "Detergente para ropa 2L",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Detergente Líquido",
                            Price = 12.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 1m,
                            Description = "Papel higiénico suave 12 rollos",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Papel Higiénico",
                            Price = 8.90m,
                            UnitId = 6,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 4m,
                            Description = "Spray limpiavidrios 500ml",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Limpiavidrios",
                            Price = 4.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Lejía desinfectante 1L",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Lejía",
                            Price = 2.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Esponjas de cocina pack x6",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Esponjas Cocina",
                            Price = 3.20m,
                            UnitId = 6,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 5m,
                            Description = "Champú para cabello normal 400ml",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Champú",
                            Price = 6.80m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 2m,
                            Description = "Pasta dental con flúor 100ml",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Pasta Dental",
                            Price = 3.20m,
                            UnitId = 9,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 7m,
                            Description = "Jabón líquido antibacterial 250ml",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Jabón de Manos",
                            Price = 4.90m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Desodorante en aerosol 150ml",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Desodorante",
                            Price = 5.50m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 9m,
                            Description = "Gel de ducha hidratante 500ml",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Gel de Ducha",
                            Price = 6.20m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 45m,
                            Description = "Analgésico y antifebril",
                            IsActive = true,
                            MinimumStock = 20m,
                            Name = "Paracetamol 500mg",
                            Price = 0.15m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 3m,
                            Description = "Alcohol etílico desinfectante 250ml",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Alcohol 70%",
                            Price = 2.50m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Vendas elásticas 5cm x 4.5m",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Vendas Elásticas",
                            Price = 3.80m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Antiinflamatorio",
                            IsActive = true,
                            MinimumStock = 15m,
                            Name = "Ibuprofeno 400mg",
                            Price = 0.20m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 25m,
                            Description = "Suplemento vitamina C 1000mg",
                            IsActive = true,
                            MinimumStock = 10m,
                            Name = "Vitamina C",
                            Price = 0.25m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Bombilla LED 10W luz cálida",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Bombillas LED",
                            Price = 4.50m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 2m,
                            Description = "Pilas alcalinas AA pack x4",
                            IsActive = true,
                            MinimumStock = 6m,
                            Name = "Pilas AA",
                            Price = 6.80m,
                            UnitId = 6,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 12m,
                            Description = "Velas aromáticas de lavanda",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Velas Aromáticas",
                            Price = 8.90m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 6,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Rollo papel aluminio 25m",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Papel Aluminio",
                            Price = 3.20m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 5m,
                            Description = "Alimento balanceado para perros 3kg",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Comida para Perros",
                            Price = 15.50m,
                            UnitId = 2,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 1m,
                            Description = "Arena sanitaria para gatos 5kg",
                            IsActive = true,
                            MinimumStock = 4m,
                            Name = "Arena para Gatos",
                            Price = 8.90m,
                            UnitId = 2,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 8m,
                            Description = "Pelota de goma resistente",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Juguete para Perros",
                            Price = 6.50m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 7,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Shampoo neutro para perros y gatos 500ml",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Shampoo para Mascotas",
                            Price = 12.80m,
                            UnitId = 8,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 4m,
                            Description = "Cargador universal USB tipo C",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Cargador USB",
                            Price = 12.50m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 1m,
                            Description = "Paraguas compacto resistente al viento",
                            IsActive = true,
                            MinimumStock = 3m,
                            Name = "Paraguas",
                            Price = 18.90m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 6m,
                            Description = "Linterna LED recargable",
                            IsActive = true,
                            MinimumStock = 2m,
                            Name = "Linterna LED",
                            Price = 15.20m,
                            UnitId = 1,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 8,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            CurrentStock = 0m,
                            Description = "Mascarillas desechables caja x50",
                            IsActive = true,
                            MinimumStock = 5m,
                            Name = "Mascarillas",
                            Price = 8.50m,
                            UnitId = 7,
                            UpdatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.UnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_UnitTypes_IsActive");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_UnitTypes_Name");

                    b.ToTable("UnitTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos por unidad individual",
                            IsActive = true,
                            Name = "Unidades",
                            Symbol = "un"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Peso en kilogramos",
                            IsActive = true,
                            Name = "Kilogramos",
                            Symbol = "kg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Peso en gramos",
                            IsActive = true,
                            Name = "Gramos",
                            Symbol = "g"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Volumen en litros",
                            IsActive = true,
                            Name = "Litros",
                            Symbol = "L"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Volumen en mililitros",
                            IsActive = true,
                            Name = "Mililitros",
                            Symbol = "mL"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en paquetes",
                            IsActive = true,
                            Name = "Paquetes",
                            Symbol = "paq"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en cajas",
                            IsActive = true,
                            Name = "Cajas",
                            Symbol = "cajas"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en botellas",
                            IsActive = true,
                            Name = "Botellas",
                            Symbol = "bot"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en tubos",
                            IsActive = true,
                            Name = "Tubos",
                            Symbol = "tubos"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos por docenas",
                            IsActive = true,
                            Name = "Docenas",
                            Symbol = "doc"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en latas",
                            IsActive = true,
                            Name = "Latas",
                            Symbol = "latas"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2025, 6, 14, 12, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Productos en sobres",
                            IsActive = true,
                            Name = "Sobres",
                            Symbol = "sobres"
                        });
                });

            modelBuilder.Entity("RestockAPI.Models.InventoryAlert", b =>
                {
                    b.HasOne("RestockAPI.Models.AlertStatus", "AlertStatus")
                        .WithMany("InventoryAlerts")
                        .HasForeignKey("AlertStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestockAPI.Models.AlertType", "AlertType")
                        .WithMany("InventoryAlerts")
                        .HasForeignKey("AlertTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestockAPI.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlertStatus");

                    b.Navigation("AlertType");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RestockAPI.Models.Product", b =>
                {
                    b.HasOne("RestockAPI.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RestockAPI.Models.UnitType", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("RestockAPI.Models.AlertStatus", b =>
                {
                    b.Navigation("InventoryAlerts");
                });

            modelBuilder.Entity("RestockAPI.Models.AlertType", b =>
                {
                    b.Navigation("InventoryAlerts");
                });

            modelBuilder.Entity("RestockAPI.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RestockAPI.Models.UnitType", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
